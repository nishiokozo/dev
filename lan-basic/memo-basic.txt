22021/05/04
■大事な点
・触っている感じ。

021/04/30
■3D BASIC
・GLSLと同じ文法が使える。ベクトル・マトリクス同士の演算も行える。sandboxのコードをコピペで移植できる。
・クォータニオン命令も実装
・DEPTHバッファによるZクリップが使える
・でもBASIC
・

2021/04/29
■用途や欲しい機能のイメージ
・１９９３年からのスーパーコンピューターの発展とランキンググラフ動画、みたいなのが上がっている。あれをリアルタイムで作りたい
・カラーは：ただし目で識別可能な範囲で構わない。多色よりハッチング等の方が重要かも
・半透明：重ね合わせや、フェードインフェードアウトなどには必要
・画像：国旗などのアイコン、イメージイラストなど、高解像やアニメーションである必要はないが必要。
・BGM:演出用にストリーミング再生。動画ではないので必須とは思わない。
・等々。
・３ＤやハイレベルのＣＧの必要性は結構低いことがわかる。ただ有ったら特徴になるとは思う。
・データ量は１００ＭＢ以下くらい。メインはテキストのデータの入手。モデルデータで数ＧＢみたいなものはかなり想定外。



2021/04/28	
■インタプリタ構想つくりたいもの
・古事記、日本書紀等の年表、登場人物、系譜を全てデータベース化したものから、自由に描画。
・データベースをウィキのように誰でも編集できるようにし、それをハードなエンジニアでなくとも言語を駆使してビジュアライズできる。
・データベースは用意する必要があるがデータベースへのアクセス手順をAPI化し一律にアクセスできるようにする。メニーコア

2021/04/24
■コンセプト②Jsonフォーマットの文法
・Jsonが読み込める言語なら、どんな言語でも読み込み～加工～出力が出来る
・Jsonが使える言語なら、ビルトイン編集が容易

2021/04/21
■関数構文
・(param)(prog)		定義	int (int a){}
・(word)(param)		呼出	foo()
・(prog)(param)		実行	{}()

{fofof}(1,2)


2021/04/17	夢
・日本語解析
・英語解析
・機械学習
・マルチスレッド処理
・メニーコアマルチコア実行



■コンセプト
・みたまんま処理される。せいぜいC言語程度の文法
・小学生でも簡単に習熟できる
・HELPが充実していて、HELP [命令]で命令とサンプルが表示され、カーソルを合わせてENTERで即実行して試せる
・解釈が一意の明瞭な文法

2021/03/25	ビジョン２
・JSON対応
	→ネットからの情報を取り出し、ビジュアライズ化を容易に行う
	→地球の３Ｄモデルを表示し、ビジュアライズ化
	→ネットからの情報収集
・WEBベースでちょっとしたことをしたいなと思ったときに手軽に手を付け、開発公開ができる環境
・組み込み式
	→命令に制限を付けて、プログラム内でプログラム実行。ライブラリのビルドイン、通信のスコープなどに制限を付けられる
	→架空ロボットを制御するコードを動かしネット対戦ゲームなどが作れる
・paiza.ioなどで選択しにくわえられたらいいなとか
・３Ｄを手軽に
	→折り紙シミュレータ、https://origamisimulator.org/ みたいなのが手軽に作れるような言語になったら世良いのだけど
・プロトタイピング
	→240x135ドット4096色中4色ハード、などの設計仕様のハードを考えて試しに作れる。

2021/03/23	ビジョン 
・ラズパイ版を作って電源ONで即C-BASICが起動するキット。U
	→USBキーボードとモニタに繋いだら即動作するキットを販売。
	→キットを購入するとOSのインストールやLinuxの使い方などを飛ばしてBASICが使える。
	→子供向きのプログラム教材としてアピール
・CLASSIC-BASIC版でレトロが好きな人にサービスする。
・理想のインタプリタ言語を公開して広める。
・ポリゴンwebGL対応する
	→もう少しパワフルなバージョン。ゲーム
・ネット対応
	→チャットプログラムが容易に書ける
	→通信対戦ゲームが容易に書ける
	→プログラムのアップロードダウンロードで公開できる
・タブレット、スマホ対応
	→マウスやキーボードが無くても、スマホやタブレットでも仮想キーボードやタッチで代用して全く同様にプログラムできる
・rpg-005battleを移植、この言語でゲームを作る
	→プラットフォーム込みでゲームを発表すれば、インタプリタとゲームの両方のアピールになる
	→Javascriptでブラウザゲームだとほかのと比較されてしまう。
	→差別化が難しい。統合されている強味の一つにネットやマルチプラットフォームなど
・テキストアドベンチャーなど自分の好きなものを作るプラットフォームというコンセプト
	→自分のためにというコンセプトに絞ることで、メンテナンス負担を減らす
	→作っている自分自身のセルフプロデュースになる。みんなの為なんて考えたらUnityやUE4の方がいいとなってしまう。
・サウンド
	→サウンド再生も基本MMLやSOUND命令。外部データを読み込まずとも
・ロボット制御
	→ネット対応、ラズパイ対応ができたら、ロボット制御のプログラムとして使う。

2021/02/26	ネタ：new BASIC / BASIC2021
・javascript上、ブラウザ上で実行され、グラフィック、通信機能、サウンド、マウス、タブレット、キーボード、ゲームパッドを手軽に扱える、
・いわばold BASICのようなコンセプト。
・BASICに対して、ローカル変数・関数・構造体の追加、行番号の廃止。文法はC風。
・コンセプトは、学習コストが低く、手軽にグラフィックや通信が使え、環境構築が不要。C風なのでそこそこモダン。
・old BASIC(8bit時代辺りの)のよさ
・1命令1機能で分かり易い
・命令[enter]で機能確認が容易
・デバッガも兼ねて合理的
・編集画面と実行画面が重なって表示されるので画面を切り替えずにすみ手間が少ない。場所も取らない


■2021/04/07	入門記事2
・表示
・計算
・入力
・ループ
・条件分岐
・関数
・構造体
・

■2021/03/26	入門記事1
・基本サンプル
	変数	a=1.23
	変数	b="abc"
	配列	{1,2,3,"11"}
	文字列	"a"+"b"
	計算	1+2*3+4
	表示	printf
	ループ	for
	分岐	if
・表示	printf
	→文字列表示	printf("hello world\n")
	→計算表示		printf(1+2*3)
	→文字列操作	print "a"+"b"
・計算	変数 型	配列変数
・条件分岐	if else / switch case break
・繰り返し	while / for
・関数	定義、引数、戻り値、ローカル変数
・算術関数	sin cos tan ...
・構造体
・入力		ゲームパッド、マウス、キーボード、
・サウンド	
・グラフィック
・通信	文字、グラフィック、音、
・チャット stdin/stdout を別のユーザーに対してhttp送受信Tできる
・ツィート機能
	→BASICの中からツィートコマンドでツィートできる。

■2021/03/28	プロモーション計画
・ツィートボタンを付けておく
	→バグ報告や要望感想などをハッシュタグ付きでツィートできるように
・ビジョンを語る
	→ラズベリーパイベースの、電源ＯＮで即使える
・チュートリアルページを作る
	→ページを跨がず上から下までローラーで閲覧すれば終わり
	→サンプルをコピペして実行してゆけば大体の動作が理解できる
	→
・売りの言語説明を箇条書き
	→『小学生から大人まで気軽に使えるコンピュータ言語』という事をはっきりアピール
	→C言語由来のモダンな文法に１命令１機能のわかりやすい命令構成
	→関数、ローカル変数、構造体等を実装したBASIC
	→ダイレクトモードがあるので命令を実行して動作確認ができる。
	→環境設定不要、ブラウザの上で編集実行もできるお手軽BASIC
	→グラフィック、サウンド、ゲームパッド、マウス、タッチパネル入力が容易に使える



■2021/03/28	×ビジョン×	グラフィック		→小学生でも気軽に使えるのがコンセプト
・ＯｐｅｎＧＬ対応
	→ラズパイを視野に入れると外せない。
・Ｃａｎｖａｓ対応
	→ポストＪａｖａｓｃｒｉｐｔくらいの使い方ができてほしい。
・内臓グラフィック
	→レトロなペイントが使えるくらい。にじまない。ラズパイ等別のハードで動かしたときに互換性がある。
・グラフィックシステムを選択性にしたらどうか？
	→ブラウザ版はＣａｎｖａｓが使える
	→３ＤグラフィックスクリーンとしてＯｐｅｎＧＬを使う
	→どちらも存在しないハードで内臓グラフィックが使われる。	
	→ハード毎にグラフィック実装を変える。
	→言語のコアとなる部分だけ共通にする
	→ネットに繋げられなければネット機能もないｃ
	
